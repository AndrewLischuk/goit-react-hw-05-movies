{"version":3,"file":"static/js/10.c27cec36.chunk.js","mappings":"uMACA,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAuH,oCAAvH,EAAmL,yCAAnL,EAA8O,mC,SCwC9O,EApCkB,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,YAAmC,IAAtBC,WAAAA,OAAsB,MAAT,GAAS,EACtD,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAASH,EACV,GAAE,CAACA,IAWJ,OACE,gBAAKK,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAmBC,SANd,SAAAC,GACxBA,EAAEC,iBACFV,EAAYG,EACb,EAGG,WACE,kBACEG,UAAWC,EACXI,KAAK,OACLC,aAAa,MACbC,MAAOV,EACPW,WAAS,EACTC,YAAY,2BACZC,SAnBkB,SAAAP,GACxB,IAAQI,EAAUJ,EAAEQ,cAAZJ,MACRT,EAASS,EACV,KAkBK,mBAAQF,KAAK,SAASL,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,UAK1B,E,oCCuBD,EAlDe,WAAO,IAAD,EACXW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMnB,EAAK,UAAGkB,EAAaE,IAAI,gBAApB,QAAgC,GAC3C,GAAwCrB,EAAAA,EAAAA,UAAS,IAAjD,eAAOsB,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBtB,EAAAA,EAAAA,YAAU,WACE,KAAVF,EACIyB,EAAAA,EAAAA,iBAA0BzB,GAAO0B,MAAK,SAAAC,GACpCL,EAAgBK,EAAKC,QACtB,IACDN,EAAgB,GACrB,GAAE,CAACtB,IAMJ,OACE,4BACIe,IAAW,SAAC,EAAD,CAAWlB,YANR,SAAAa,GAClBS,EAA0B,KAAVT,EAAe,CAAEV,MAAOU,GAAU,CAAC,EACpD,EAIqDZ,WAAYE,KAC9D,iBAAKG,UAAWC,EAAAA,EAAAA,UAAhB,WACIW,GACwB,IAAxBM,EAAaQ,QACbR,EAAaS,KACX,gBAAGC,EAAH,EAAGA,GAAoBC,EAAvB,EAAOC,eAAoCC,EAA3C,EAA8BC,YAA9B,OACE,UAAC,KAAD,CACEC,GAAE,UAAKL,GAEPM,MAAO,CAAEC,KAAMf,GACfpB,UAAWC,EAAAA,EAAAA,UAJb,WAME,gBACEmC,IAAG,0CAAqCL,GACxCM,IAAI,cAEN,uBAAIR,MARCD,EAHT,IAeH/B,GAAiC,IAAxBqB,EAAaQ,SACrB,iDAAuB7B,EAAvB,mBAGJ,SAAC,KAAD,MAGL,C,oBC3DD,KAAgB,UAAY,wBAAwB,UAAY,wB","sources":["webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"searchForm\":\"Searchbar_searchForm__Bt5yh\",\"searchFormButton\":\"Searchbar_searchFormButton__Y7AQk\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__EPPP6\",\"searchFormInput\":\"Searchbar_searchFormInput__k+juR\"};","import PropTypes from 'prop-types';\n\nimport { useState, useEffect } from 'react';\nimport styles from './Searchbar.module.css';\n\nconst Searchbar = ({ handleQuery, queryValue = '' }) => {\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setQuery(queryValue);\n  }, [queryValue]);\n\n  const handleInputChange = e => {\n    const { value } = e.currentTarget;\n    setQuery(value);\n  };\n\n  const handlerFormSubmit = e => {\n    e.preventDefault();\n    handleQuery(query);\n  };\n  return (\n    <div className={styles.searchbar}>\n      <form className={styles.searchForm} onSubmit={handlerFormSubmit}>\n        <input\n          className={styles.searchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className={styles.searchFormButton}>\n          <span className={styles.searchFormButtonLabel}></span>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  handleQuery: PropTypes.func,\n  queryValue: PropTypes.string,\n};\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n  useSearchParams,\n} from 'react-router-dom';\nimport movieAPI from '../../services/tmdbAPI';\nimport styles from '../Home/Home.module.css';\n\nconst Movies = () => {\n  const { movieId } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [searchMovies, setSearchMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    query !== ''\n      ? movieAPI.getMovieBySearch(query).then(data => {\n          setSearchMovies(data.results);\n        })\n      : setSearchMovies([]);\n  }, [query]);\n\n  const handleQuery = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <div>\n      {!movieId && <Searchbar handleQuery={handleQuery} queryValue={query} />}\n      <div className={styles.movieList}>\n        {!movieId &&\n          searchMovies.length !== 0 &&\n          searchMovies.map(\n            ({ id, original_title: title, poster_path: poster }) => (\n              <NavLink\n                to={`${id}`}\n                key={id}\n                state={{ from: location }}\n                className={styles.movieItem}\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${poster}`}\n                  alt=\"alt logo\"\n                />\n                <p>{title}</p>\n              </NavLink>\n            )\n          )}\n        {query && searchMovies.length === 0 && (\n          <div>{`No movies on \"${query}\" request`}</div>\n        )}\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Home_movieList__Sm4J-\",\"movieItem\":\"Home_movieItem__0rUMc\"};"],"names":["handleQuery","queryValue","useState","query","setQuery","useEffect","className","styles","onSubmit","e","preventDefault","type","autoComplete","value","autoFocus","placeholder","onChange","currentTarget","movieId","useParams","useSearchParams","searchParams","setSearchParams","get","searchMovies","setSearchMovies","location","useLocation","movieAPI","then","data","results","length","map","id","title","original_title","poster","poster_path","to","state","from","src","alt"],"sourceRoot":""}